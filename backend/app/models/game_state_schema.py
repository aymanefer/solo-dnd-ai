# generated by datamodel-codegen:
#   filename:  game_state.schema.json
#   timestamp: 2025-09-17T01:08:45+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel

from . import character_schema


class Difficulty(Enum):
    easy = "easy"
    normal = "normal"
    hard = "hard"


class Meta(BaseModel):
    campaign_id: Optional[str] = None
    turn: Optional[int] = None
    datetime: Optional[str] = None
    difficulty: Optional[Difficulty] = None


class Locations(BaseModel):
    name: Optional[str] = None
    tags: Optional[List[str]] = None
    notes: Optional[str] = None


class Status(Enum):
    active = "active"
    completed = "completed"
    failed = "failed"


class Quests(BaseModel):
    name: Optional[str] = None
    status: Optional[Status] = None
    objectives: Optional[List[str]] = None


class Type(Enum):
    ROLL = "ROLL"
    ACTION = "ACTION"
    EVENT = "EVENT"
    NARRATION = "NARRATION"


class LogItem(BaseModel):
    t: Optional[int] = None
    type: Optional[Type] = None
    detail: Optional[Dict[str, Any]] = None


class GameState(BaseModel):
    meta: Meta
    party: List[str]
    characters: Dict[str, character_schema.Character]
    npcs: Optional[Dict[str, character_schema.Character]] = None
    locations: Optional[Dict[str, Locations]] = None
    quests: Optional[Dict[str, Quests]] = None
    flags: Optional[Dict[str, bool]] = None
    log: List[LogItem]
