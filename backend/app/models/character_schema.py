# generated by datamodel-codegen:
#   filename:  character.schema.json
#   timestamp: 2025-09-17T01:01:13+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, conint


class Class(Enum):
    Barbarian = 'Barbarian'
    Bard = 'Bard'
    Cleric = 'Cleric'
    Druid = 'Druid'
    Fighter = 'Fighter'
    Monk = 'Monk'
    Paladin = 'Paladin'
    Ranger = 'Ranger'
    Rogue = 'Rogue'
    Sorcerer = 'Sorcerer'
    Warlock = 'Warlock'
    Wizard = 'Wizard'


class Race(Enum):
    Human = 'Human'
    Elf = 'Elf'
    Dwarf = 'Dwarf'
    Halfling = 'Halfling'
    Dragonborn = 'Dragonborn'
    Gnome = 'Gnome'
    Half_Elf = 'Half-Elf'
    Half_Orc = 'Half-Orc'
    Tiefling = 'Tiefling'


class Abilities(BaseModel):
    str: int_aliased
    dex: int_aliased
    con: int_aliased
    int: int_aliased
    wis: int_aliased
    cha: int_aliased


class Proficiencies(BaseModel):
    skills: Optional[List[str]] = None
    saves: Optional[List[str]] = None
    weapons: Optional[List[str]] = None
    armor: Optional[List[str]] = None
    tools: Optional[List[str]] = None


class Hp(BaseModel):
    current: conint(ge=0)
    max: conint(ge=1)
    temp: Optional[conint(ge=0)] = None


class Condition(Enum):
    Blinded = 'Blinded'
    Charmed = 'Charmed'
    Deafened = 'Deafened'
    Frightened = 'Frightened'
    Grappled = 'Grappled'
    Incapacitated = 'Incapacitated'
    Invisible = 'Invisible'
    Paralyzed = 'Paralyzed'
    Petrified = 'Petrified'
    Poisoned = 'Poisoned'
    Prone = 'Prone'
    Restrained = 'Restrained'
    Stunned = 'Stunned'
    Unconscious = 'Unconscious'
    Exhaustion = 'Exhaustion'


class Persona(BaseModel):
    voice: Optional[str] = None
    goals: Optional[List[str]] = None
    tactics: Optional[str] = None


class Character(BaseModel):
    id: str = Field(..., description='Unique character ID')
    name: str
    level: conint(ge=1)
    class_: Class = Field(..., alias='class')
    race: Race
    alignment: Optional[str] = None
    abilities: Abilities
    proficiencies: Optional[Proficiencies] = None
    ac: conint(ge=1)
    hp: Hp
    speed: conint(ge=0)
    inventory: Optional[List[Dict[str, Any]]] = None
    spells: Optional[List[Dict[str, Any]]] = None
    features: Optional[List[str]] = None
    conditions: Optional[List[Condition]] = None
    resources: Optional[Dict[str, int_aliased]] = None
    persona: Optional[Persona] = None
